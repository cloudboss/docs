\use-plugin{concourse-docs}

\title{\code{put} step}{put-step}

Pushes to the given \reference{resources}{Resource}. All artifacts collected
during the plan's execution will be available in the working directory.

When the \code{put} succeeds, the produced version of the resource will be
immediately fetched via an implicit \reference{get-step}. This is so that later
steps in your plan can use the artifact that was produced. The source will be
available under whatever name \code{put} specifies, just like as with
\code{get}.

\right-side{Examples}{
  \example{Pull & Push}{
    The following plan fetches a repo using \reference{get-step}{\code{get}} and
    pushes it to another repo (assuming \code{repo-develop} and \code{repo-master}
    are defined as \code{git} resources):

    \codeblock{yaml}{{
    plan:
    - get: repo-develop
    - put: repo-master
      params:
        repository: repo-develop
    }}
  }

  \example{Tweaking the Implicit \code{get}}{
    If the logical name (whatever \code{put} specifies) differs from the
    concrete resource, you would specify \code{resource} as well, like so:

    \codeblock{yaml}{{
    plan:
    - put: resource-image
      resource: docker-image-resource
    }}

    Additionally, you can control the settings of the implicit \code{get} step
    by setting \code{get_params}. For example, if you did not want a \code{put}
    step utilizing the \link{ \code{docker-image} resource
    type}{https://github.com/concourse/docker-image-resource} to download the
    image, you would implement your \code{put} step as such:

    \codeblock{yaml}{{{
    plan:
    - put: docker-build
      params: {build: git-resource}
      get_params: {skip_download: true}
    }}}
  }
}

\define-attribute{put: string}{
  \italic{Required.} The logical name of the resource being pushed. The pushed
  resource will be available under this name after the push succeeds.
}{put-step-put}

\define-attribute{resource: string}{
  \italic{Optional. Defaults to \code{name}.} The resource to update, as
  configured in \reference{pipeline-resources}.
}{put-step-resource}

\define-attribute{params: object}{
  \italic{Optional.} A map of arbitrary configuration to forward to the
  resource. Refer to the resource type's documentation to see what it
  supports.
}{put-step-params}

\define-attribute{get_params: object}{
  \italic{Optional.} A map of arbitrary configuration to forward to the
  resource that will be utilized during the implicit \code{get} step. 
  Refer to the resource type's documentation to see what it supports.
}{put-step-get-params}
