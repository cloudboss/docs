\use-plugin{concourse-docs}

\title{\code{aggregate} step}{aggregate-step}

\define-attribute{aggregate: [step]}{
  Performs the given steps in parallel.

  If any sub-steps in an aggregate result in an error, the aggregate step as a
  whole is considered to have errored.

  Similarly, when aggregating \reference{task-step}{\code{task}} steps, if any
  \italic{fail}, the aggregate step will fail.
}

\right-side{Examples}{
  \example{Build Matrix}{
    If any step in the \code{aggregate} fails, the build will fail, making it
    useful for build matrices:

    \codeblock{yaml}{{
    plan:
    - get: some-repo
    - aggregate:
      - task: unit-windows
        file: some-repo/ci/windows.yml
      - task: unit-linux
        file: some-repo/ci/linux.yml
      - task: unit-darwin
        file: some-repo/ci/darwin.yml
    }}
  }

  \example{Parallel Fetching}{
    The \code{aggregate} step is also useful for performing arbitrary steps in
    parallel, for the sake of speeding up the build. It is often used to fetch
    all dependent resources together:

    \codeblock{yaml}{{
    plan:
    - aggregate:
      - get: component-a
      - get: component-b
      - get: integration-suite
    - task: integration
      file: integration-suite/task.yml
    }}
  }
}
