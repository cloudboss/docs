\use-plugin{concourse-docs}

\title{\code{ensure} step hook}{ensure-step-hook}

Any step can have \code{ensure} tacked onto it, whose value is a second step to
execute regardless of the result of the parent step.

\define-attribute{ensure: step}{
  The step to execute. Regardless of whether the parent step succeeds, fails,
  or errors, this step will be executed. The step will also be executed if the
  build was aborted, and its parent step was interrupted.

  If the parent step succeeds and the ensured step fails, the parent step is
  considered to have failed.

  The ensured step executes after any \reference{on-success-step-hook}s or
  \reference{on-failure-step-hook}s.
}

\right-side{Examples}{
  \example{Releasing a Lock}{
    For example, the following build plan acquires a lock, and then
    \code{ensure}s that the lock is released.

    \codeblock{yaml}{{
    plan:
    - put: some-lock
      params: {acquire: true}
    - task: integration
      file: foo/integration.yml
      ensure:
        put: some-lock
        params: {release: some-lock}
    }}
  }
}
